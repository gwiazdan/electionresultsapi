name: Java CI with Maven and Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: electionresults-api-jar
        path: target/*.jar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: electionresults-api-jar

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . 
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/electionresults-api:latest
        file: Dockerfile
        build-args: JAR_FILE=electionresults-0.0.1-SNAPSHOT.jar  # Użyj bezpośrednio pliku JAR
